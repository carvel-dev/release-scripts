name: imgpkg
"on":
  push:
    branches:
    - main
jobs:
  imgpkg:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: generate homebrew formula
      run: |
        set -e -x
        curl -L https://carvel.dev/install.sh | bash

        ./scripts/generate_homebrew_formula.sh "imgpkg" > ./imgpkg.rb

        cat ./imgpkg.rb
    - name: Upload homebrew Formula
      uses: actions/upload-artifact@v2
      with:
        name: homebrew-formula
        path: ./imgpkg.rb
    - name: generate install.sh
      run: |
        set -e -x
        curl -L https://carvel.dev/install.sh | bash

        ./scripts/generate_install_sh.sh "imgpkg" > ./install.sh

        cat ./install.sh
    - name: Upload install.sh
      uses: actions/upload-artifact@v2
      with:
        name: install_sh
        path: ./site/static/install.sh
  homebrew:
    needs: imgpkg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        repository: vmware-tanzu/homebrew-carvel
        ref: develop
    - name: Download updated homebrew formula
      uses: actions/download-artifact@v2
      with:
        name: homebrew-formula
    - name: View homebrew formula
      run: |
        cat ./imgpkg.rb
    - name: Commit & Push changes
      env:
        AUTHOR_NAME: k8slt
        AUTHOR_EMAIL: klt@groups.vmware.com
        REPOSITORY: vmware-tanzu/homebrew-carvel
        BRANCH: imgpkg-homebrew
        FORCE: true
        GITHUB_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
        GITHUB_DEPLOY_PRIVATE_KEY: ${{ secrets.HOMEBREW_DEPLOY_PRIVATE_KEY }}
      run: |
        set -e

        timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

        AUTHOR_EMAIL=${AUTHOR_EMAIL:-'github-actions[bot]@users.noreply.github.com'}
        AUTHOR_NAME=${AUTHOR_NAME:-'github-actions[bot]'}
        MESSAGE=${MESSAGE:-"chore: autopublish ${timestamp}"}
        FORCE=${FORCE:-false}
        REPOSITORY=${REPOSITORY:-$GITHUB_REPOSITORY}

        echo "Push to branch $BRANCH";
        [ -z "${BRANCH}" ] && {
          echo 'Missing branch';
          exit 1;
        };

        if [ -z "${GITHUB_TOKEN}" ] && [ -z "${GITHUB_DEPLOY_PRIVATE_KEY}" ]; then
            echo 'Missing required input "github_token: ${{ secrets.GITHUB_TOKEN }} OR "github_deploy_private_key: ${{ secrets.GITHUB_DEPLOY_PRIVATE_KEY }}".';
            exit 1;
        fi

        if ${FORCE}; then
            _FORCE_OPTION='--force'
        fi

        remote_repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${REPOSITORY}.git"

        if [ -n "${GITHUB_DEPLOY_PRIVATE_KEY}" ]; then
          remote_repo="git@github.com:${REPOSITORY}"

          tempkey=`basename $0`
          TMP_DEPLOY_PRIV_KEY=`mktemp /tmp/${tempkey}.XXXXXX` || exit 1
          echo "${GITHUB_DEPLOY_PRIVATE_KEY}" > $TMP_DEPLOY_PRIV_KEY
          eval $(ssh-agent -s)
          ssh-add ${TMP_DEPLOY_PRIV_KEY}
        fi

        git config http.sslVerify true
        git config --local user.email "${AUTHOR_EMAIL}"
        git config --local user.name "${AUTHOR_NAME}"

        git add -A

        git commit -m "${MESSAGE}" $_EMPTY || exit 0

        git push "${remote_repo}" HEAD:"${BRANCH}" --follow-tags $_FORCE_OPTION;
  install_sh:
    needs: imgpkg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        repository: vmware-tanzu/carvel
        ref: develop
    - name: Download updated install.sh
      uses: actions/download-artifact@v2
      with:
        name: install_sh
    - name: View install.sh
      run: |
        cat ./install.sh
    - name: Commit & Push changes
      env:
        AUTHOR_NAME: k8slt
        AUTHOR_EMAIL: klt@groups.vmware.com
        REPOSITORY: vmware-tanzu/carvel
        BRANCH: imgpkg-install-sh
        FORCE: true
        GITHUB_TOKEN: ${{ secrets.INSTALL_SH_TOKEN }}
        GITHUB_DEPLOY_PRIVATE_KEY: ${{ secrets.INSTALL_SH_DEPLOY_PRIVATE_KEY }}
      run: |
        set -e

        timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

        AUTHOR_EMAIL=${AUTHOR_EMAIL:-'github-actions[bot]@users.noreply.github.com'}
        AUTHOR_NAME=${AUTHOR_NAME:-'github-actions[bot]'}
        MESSAGE=${MESSAGE:-"chore: autopublish ${timestamp}"}
        FORCE=${FORCE:-false}
        REPOSITORY=${REPOSITORY:-$GITHUB_REPOSITORY}

        echo "Push to branch $BRANCH";
        [ -z "${BRANCH}" ] && {
          echo 'Missing branch';
          exit 1;
        };

        if [ -z "${GITHUB_TOKEN}" ] && [ -z "${GITHUB_DEPLOY_PRIVATE_KEY}" ]; then
            echo 'Missing required input "github_token: ${{ secrets.GITHUB_TOKEN }} OR "github_deploy_private_key: ${{ secrets.GITHUB_DEPLOY_PRIVATE_KEY }}".';
            exit 1;
        fi

        if ${FORCE}; then
            _FORCE_OPTION='--force'
        fi

        remote_repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${REPOSITORY}.git"

        if [ -n "${GITHUB_DEPLOY_PRIVATE_KEY}" ]; then
          remote_repo="git@github.com:${REPOSITORY}"

          tempkey=`basename $0`
          TMP_DEPLOY_PRIV_KEY=`mktemp /tmp/${tempkey}.XXXXXX` || exit 1
          echo "${GITHUB_DEPLOY_PRIVATE_KEY}" > $TMP_DEPLOY_PRIV_KEY
          eval $(ssh-agent -s)
          ssh-add ${TMP_DEPLOY_PRIV_KEY}
        fi

        git config http.sslVerify true
        git config --local user.email "${AUTHOR_EMAIL}"
        git config --local user.name "${AUTHOR_NAME}"

        git add -A

        git commit -m "${MESSAGE}" $_EMPTY || exit 0

        git push "${remote_repo}" HEAD:"${BRANCH}" --follow-tags $_FORCE_OPTION;
